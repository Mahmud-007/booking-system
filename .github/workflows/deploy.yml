name: Deploy to AWS Lambda

on:
  push:
    branches:
      - main  # Deploy when pushing to main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Dependencies
        run: npm ci

      - name: Generate Prisma Client
        run: npx prisma generate

      - name: Build TypeScript
        run: npm run build

      - name: Install Serverless Framework
        run: npm install -g serverless

      - name: Create serverless.yml if not exists
        run: |
          if [ ! -f serverless.yml ]; then
            cat > serverless.yml << EOL
            service: booking-system
            
            provider:
              name: aws
              runtime: nodejs20.x
              stage: \${opt:stage, 'dev'}
              region: us-east-1
              environment:
                DATABASE_URL: \${env:DATABASE_URL}
                JWT_SECRET: \${env:JWT_SECRET}
                NODE_ENV: \${opt:stage, 'dev'}
            
            functions:
              app:
                handler: dist/app.handler
                events:
                  - http:
                      path: /
                      method: ANY
                      cors: true
                  - http:
                      path: /{proxy+}
                      method: ANY
                      cors: true
                      
            plugins:
              - serverless-dotenv-plugin
            EOL
            
            npm install --save-dev serverless-dotenv-plugin
          fi

      - name: Create Lambda Handler
        run: |
          if ! grep -q "module.exports.handler" dist/app.js; then
            # Create a backup of the original file
            cp dist/app.js dist/app.js.bak
            
            # Add Lambda handler code
            cat > dist/app.js << EOL
          $(cat dist/app.js)
          
          // AWS Lambda handler
          const serverless = require('serverless-http');
          module.exports.handler = serverless(app);
          EOL
          
            echo "Added Lambda handler to app.js"
          fi

      - name: Deploy to AWS Lambda
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
        run: serverless deploy